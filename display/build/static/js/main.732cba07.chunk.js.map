{"version":3,"sources":["loader.js","card.js","App.js","reportWebVitals.js","index.js"],"names":["messages","split","loader","element","options","Object","assign","this","delay","before","after","slice","array","Array","from","_setLoadMessage","timer","setInterval","clearInterval","r","_rand","last","innerHTML","get","Math","random","length","Card","work","apiURL","title","url","useState","usernameAO3","setUsernameAO3","wordAO3","setWordAO3","workContent","setWorkContent","metadata","setMetadata","newWorkURL","setNewWorkURL","getFullWork","a","formData","FormData","append","fetch","method","body","then","res","json","data","hideBlock","response","showBlock","e","preventDefault","console","log","JSON","stringify","showLoading","text","hideLoading","updateMetaDataDisplay","displayLoc","document","getElementById","newMeta","loc","key","val","createElement","innerText","insertAdjacentElement","id","style","display","classList","add","loadingText","start","class","href","type","onClick","onSubmit","name","onChange","target","value","color","paddingBottom","fontSize","App","usernameFFN","setUsernameFFN","selectedWork","setSelectedWork","works","displayWorks","len","keys","list","i","newTitle","number","workElement","className","onclick","showInfo","selected","window","location","reload","textAlign","card","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.732cba07.chunk.js","sourcesContent":["// from Loadr by Dimitar Christoff at https://github.com/DimitarChristoff/loadr/\nlet messages = 'growing puppies,giving hugs,reading books,cracking knuckles,getting a sorting hat,abracadaboasidruoshdf,getting chapters,admiring your fic,kudoing,commenting,writing,studying Mars terrain,ctrl-Z-ing,finding sign of life,three two one sleep,looking for things in the attic,herding rodents,feeding robots,eating lunch,eating brunch,eating dinner,getting ink,praying for a miracle,hammering nails,setting up printer,pressing submit,petting dogs,losing Nemo,building Death Star,finding obi-wan,time-traveling'.split(',');\n\n/**\n * @class loader\n */\nclass loader {\n\n  /**\n   * @constructs loader\n   * @param {HTMLElement=} element\n   * @param {Object=} options\n   */\n  constructor(element = null, options = {}){\n    /**\n     *\n     * @type {{delay: number, before: string, after: string}}\n     */\n    Object.assign(this.options = {\n      delay: 2500,\n      before: '',\n      after: '...'\n    }, options);\n\n    element && (this.element = element);\n  }\n\n  get messages(){\n    return messages.slice();\n  }\n\n  set messages(array){\n    messages = Array.from(array);\n  }\n\n  /**\n   * Starts looping messages into an element\n   * @returns {loader}\n   */\n  start(){\n    this._setLoadMessage();\n    this.timer = setInterval(() =>{\n      this._setLoadMessage();\n    }, this.options.delay);\n\n    return this;\n  }\n\n  /**\n   * Stops looping of messages\n   * @returns {loader}\n   */\n  stop(){\n    clearInterval(this.timer);\n\n    return this;\n  }\n\n  /**\n   * Just return a message that is different from the last message returned.\n   * @param {*=} r\n   * @returns {String}\n   */\n  get(r){\n    const { before, after } = this.options;\n    while ((r = this._rand()) == this.last);\n\n    return before + messages[this.last = r] + after;\n  }\n\n  /**\n   * Internal loader of a new message that is different from last one.\n   * @param {*=} o\n   * @returns {loader}\n   * @private\n   */\n  _setLoadMessage(){\n    this.element && (this.element.innerHTML = this.get());\n\n    return this;\n  }\n\n  /**\n   * Generates a random number within the size of the messages\n   * @returns {number}\n   * @private\n   */\n  _rand(){\n    return ~~(Math.random() * messages.length);\n  }\n}\n\nexport default loader;","import React, {useEffect, useState} from 'react';\nimport loader from './loader';\nimport App from './App';\n\nfunction Card(work) {\n    const apiURL = '/api/metadata/';\n\n    var id = work[0];\n    var title = work[1];\n    var url = work[2];\n\n    const [usernameAO3, setUsernameAO3] = useState(\"\");\n    const [wordAO3, setWordAO3] = useState(\"\");\n    const [workContent, setWorkContent] = useState([]);\n    var [metadata, setMetadata] = useState([]);\n    const [newWorkURL, setNewWorkURL] = useState(\"\");\n\n    async function getFullWork () {\n        const formData = new FormData();\n        formData.append('title', title);\n        formData.append('url', url);\n\n        let downloadContent = await fetch('/api/content/', {\n            method: 'post',\n            body: formData,\n        }).then(res => res.json())\n            .then(data => {\n            // console.log(data)\n            setWorkContent(data)      \n        });\n    }\n    \n    async function getMetaData () {\n        hideBlock('confirm');\n        \n        const formData = new FormData();\n        formData.append('url', url);\n\n        let meta = await fetch(apiURL, {\n            method: 'post',\n            body: formData,\n        }).then( (response) => response.json()).then(data => {\n          setMetadata(data);\n          getFullWork();\n          hideBlock('workInfo')\n          showBlock('ao3Log');\n        });\n\n    }\n\n    async function getAO3Session (e) {\n        e.preventDefault();\n\n        hideBlock('ao3Log');\n        console.log('submitted!');\n        const formData = new FormData();\n        formData.append('username', usernameAO3);\n        formData.append('password', wordAO3);\n        formData.append('meta', JSON.stringify(metadata));\n        formData.append('content', JSON.stringify(workContent));\n        showLoading();\n\n        await fetch ('/api/AO3Login/', {\n            method: 'post',\n            body: formData,\n        }).then( (response) => response.text()).then(data => {\n            hideLoading();\n            if (data === 'INVALID') {\n                showBlock('invalidLogin')\n            } else {\n                setNewWorkURL(data);\n                showBlock('newURL');\n\n                updateMetaDataDisplay();                \n                showBlock('ao3CardLink');\n                showBlock('workInfo');\n\n                setWordAO3(\"\"); // clear password\n            }\n        });\n    }\n\n    const cancelSelect = () => {\n        showBlock('workList');\n        hideBlock('workInfo');\n    }\n\n    const updateMetaDataDisplay = () => {\n        var displayLoc = document.getElementById('metadata');\n        displayLoc.innerHTML = \"\";\n        newMeta(displayLoc, 'fandom', metadata['fandom']);\n        newMeta(displayLoc, 'chapters', metadata['chapters']);\n        newMeta(displayLoc, 'summary', metadata['summary']);\n    }\n    const newMeta = (loc, key, val) => {\n        var newMeta = document.createElement('p');\n        newMeta.innerText = key + \": \" + val;\n        loc.insertAdjacentElement('beforeend', newMeta);\n    }\n\n    const hideBlock = (id) => {\n        // console.log(\"hide!\");\n        var block = document.getElementById(id);\n        block.style.display = \"none\";\n    }\n\n    const showBlock = (id) => {\n        // console.log(\"show!\");\n        var block = document.getElementById(id);\n        block.style.display = \"\";\n    }\n\n    let text;\n    const showLoading = () => {\n        showBlock('loading');\n        showBlock('note');\n        document.getElementById(\"loading\").classList.add(\"loader\");\n        const loadingText = new loader(document.getElementById(\"loadText\"));\n        loadingText.start();\n        text = setInterval(function(){document.getElementById(\"loadText\").innerHTML = loadingText.get()},2000);\n    }\n\n    const hideLoading = () => {\n        clearInterval(text);\n        hideBlock('note');\n        hideBlock('loadText');\n        hideBlock('loading');\n    }\n    \n    return (\n        <div class=\"container\">\n            <div class='row'>\n                <div class ='col-sm-12 col-m-12 col-12'>\n                    <div id='newURL' style={{display:'none'}}>tada! <a href={newWorkURL}>{title} - {usernameAO3} - archiveofourown.com</a></div>\n                    <div id='invalidLogin' style={{display:'none'}}>Your password or username was wrong.</div>\n                    <div id=\"workInfo\" class=\"card\" style={{display:'none'}}>\n                        <div class=\"card-body\">\n                            <h5 class=\"card-title\">{title}</h5>\n                            <h6 class=\"card-subtitle mb-2 text-muted\"><a href={url} class=\"card-link\">ff.net/{title}</a></h6>\n                            <h6 id='ao3CardLink' class=\"card-subtitle mb-2 text-muted\" style={{display: 'none'}}><a href={newWorkURL} class=\"card-link\">ao3.com/{title}</a></h6>\n                            <p id='metadata' class=\"card-text\"></p>\n                            <div id='confirm'>\n                                <p>is this the right story?</p>\n                                <button class='trans-btn' type=\"submit\" onClick={getMetaData}>this one alright</button>\n                                <button class='trans-btn' type=\"cancel\" onClick={cancelSelect}>no go back</button>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div id='ao3Log' class ='col-sm-12 col-m-12 col-12' style={{display:'none'}}>\n                    <div class='login'>\n                        <p>Login to AO3</p>\n                        <form id='ao3Form' onSubmit={getAO3Session}>\n                            <p>AO3 Username: \n                            <input class='input' type='username' name='userAO3' id='userAO3' onChange={e => setUsernameAO3(e.target.value)}></input></p>\n                            <p>AO3 Password: \n                            <input class='input' type='password' name='passwordAO3' id='passwordAO3' onChange={e => setWordAO3(e.target.value)}></input></p>\n\n                            <button class='trans-btn' type=\"submit\">Log In</button>\n                        </form>\n                    </div>\n                </div>\n                <div id=\"loading\" style={{color:\"black\", paddingBottom:\"1%\", fontSize: \"30px\", display: 'none'}}>.</div>\n                <div id='loadText'></div>\n                <div id='note' style={{display: 'none'}}>\n                    <p id='timeText'> \n                        <br/>To prevent overloading the server, each chapter takes 1 to 2 secs to be uploaded.\n                        <br/>If your work is like 100 chapters, ah man....\n                        <br/><br/>\n                    </p>\n                </div>\n\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import './App.css';\nimport React, {useState} from 'react';\nimport card from './card';\n\nfunction App() {\n  // USERNAME (FFN)\n  const [usernameFFN, setUsernameFFN] = useState(\"\");\n  // ID, TITLE, URL\n  const [selectedWork, setSelectedWork] = useState([]);\n  var works = [];\n\n  async function getWorks(e) {\n    // console.log(\"[DISPLAY WORK]\");\n    e.preventDefault();\n\n    showBlock('greeting');\n    showBlock('reload');\n    hideBlock('ffn-user');\n    const formData = new FormData();\n    formData.append('username', usernameFFN);\n\n    await fetch ('/api/ffn/', {\n        method: 'post',\n        body: formData,\n    }).then( (response) => response.json()).then(data => {\n      works = data;\n      // console.log(data);\n      displayWorks();\n    });\n    \n  }\n\n  const displayWorks = () => {\n    hideBlock('submitBtn');\n    var len = (Object.keys(works).length) / 2;\n    var list = document.getElementById('workList');\n    if (len == 0) list.innerHTML = \"<b>Empty or Invalid user</b><br/><p class='tinyText'>unless this is what you want...? weird flex but ok</p>\";\n    else {\n      list.innerHTML = \"<b>Select a work:</b>\";\n      for (let i = 0; i < len; i++) {\n        newTitle(list, i + 1, works[2 * i]);\n      }\n    }\n  }\n  \n  const newTitle = (list, number, title) => {\n    var workElement = document.createElement('div');\n    workElement.id = number;\n    workElement.className = 'workTitle';\n    workElement.innerHTML = number + \". \" + title;\n    workElement.onclick = function() {showInfo(number - 1)};\n\n    list.insertAdjacentElement('beforeend', workElement);\n  }\n\n  const hideBlock = (id) => {\n    // console.log(\"hide!\");\n    var block = document.getElementById(id);\n    block.style.display = \"none\";\n  }\n\n  const showBlock = (id) => {\n    // console.log(\"show!\");\n    var block = document.getElementById(id);\n    block.style.display = \"\";\n  }\n\n  async function showInfo (id) {\n    var selected = [id, works[2 * id], works[2 * id + 1]];\n    setSelectedWork(selected);\n    // console.log(selectedWork);\n    // console.log(\"show info for \" + id);\n    hideBlock('workList');\n    showBlock('workInfo');\n  }\n\n  \n\n  return (\n    <div className=\"App\">\n      <h1>HELLO</h1>\n      <p id='intro'>Welcome to FTO3, transferring works on <a href=\"https://www.fanfiction.net/\">fanfiction.net</a> to <a href=\"https://archiveofourown.org/\">archiveofourown</a>.<br/> psst don't forget to go update that fic you haven't updated in like, 5 years.</p>\n      <p id='greeting' style={{display:'none'}}>currently browsing as <b>{usernameFFN}</b> (ffn)</p>\n      <div id='reload' style={{display: 'none'}}><button class='trans-btn' onClick={() => window.location.reload(false)}>start over</button></div>\n      <form id='ffn-user' onSubmit={getWorks}>\n        <p> \n            Your Fanfiction.net Username: <br/>\n            <input class='input' id=\"username\" type=\"username\" name=\"username\" onChange={e => setUsernameFFN(e.target.value)}/>\n        </p>\n\n        <button class='trans-btn' id=\"submitBtn\" type=\"submit\">search</button>\n      </form>\n      <div id=\"mainDisplay\">\n        <div id=\"workList\" style={{textAlign:\"left\"}}></div>\n        {card(selectedWork)}\n        <div id=\"mainWork\"></div>\n      </div>\n\n      <a id=\"credit\" href=\"https://github.com/clostone/ffnToAO3\">@clostone</a>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}